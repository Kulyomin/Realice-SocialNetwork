Конспект #2 - Зачем нужен NodeJS
-Браузер(Хром,Опера)-программа в которой работает JS.
NodeJS программа, которая  находится на сервере (вместо браузера) и в нем работает JS.

-Браузер и NodeJS используют один и тот же движок v8-поэтому обоих воспринимает JS.

-Npm,Yarn -пакетный менеджер(устанавливает и следит за кучей пакетов в NodeJS).

-React-работает с NodeJS-т.к. здесь есть все необходимые пакеты для компиляции и вывода данных.

Конспект #5 - SPA-Single Page Application
SPA - это веб-приложение или веб-сайт, использующий единственный HTML-документ как оболочку
для всех веб-страниц и организующий взаимодействие с пользователем через динамически
подгружаемые HTML, CSS, JavaScript[1], обычно посредством AJAX. 

Конспект #6 - React JS, JSX, App.js
JSX - JavaScriptXHTML
JavaScript XML (JSX) — это расширение синтаксиса JavaScript, которое позволяет использовать
HTML-подобный синтаксис для описания структуры интерфейса.

Конспект #7 - Компонента
Компонента - это функция возвращающая(return) XHTML разметку

Конспект #8 - Ссылки
Для установки пакета обработчика ссылок нужно прописать команду npm i react-router-dom
Для установки прослушивателя прописываемя <Route path='/dialogs' element={<Dialogs />}>
PreventDefault - Отменяет действие элемента установленное по умолчанию.
History Api Html5 - Изменяет url адрес страницы с помощью Api

Конспект #9 - Прочее
Ctrl + D = Дублирование строки
Map - Метод массива возвращающий стрелочную функцию(В React может возвращать JSX разметку)
Filter - Метод Массива фильтрующий элементы в соответствии с заданым фильтром
Reduce - Метод массива состоящий из reduce((accumulator,initialValue),accumulatorValue)
этим методом можно выполнять различные арифметические операции создавая новый массив
Все методы используются для минимизации кода и понятного синтакиса

Конспект #10 - UL, BLL
BLL - Business Logic Layer
UI - User Interface
Два варианта вызова компонентны в ROUTE:
1 - component = {<Profile />} Нельзя прокинуть параметры для props
2 - render = { () => <Profile /> }  Можно прокинуть props, но выглядит громоздко
В новой версии React-Router-Dom заменили одним тегом element, где можно прокидывать props.
element={ <Profile name='Evgenii' /> }.

Конспект #11 - Домашка
1)Добавить аватарки в сообщения -  Выполнил
2)Сверстать сообщения к разным бокам и аватарки - Сделать легко но не понятно как, т.к. пользователи то разные
3)Добавить в SideBar Friends в котором отобрадаются друзья - Не вижу смысла делать это

Конспект #12 - Теория по логике
callback function - функция которая передается и вызывается только после определенного действия пользователя

Конспект #13 - Теория по бизнес логике BLL-Business Logic Layer
Суть передачи данных между UI и Bll состоит в том что каждые символ/слово/предложение/изображение и прочее переносится
в сторонние базы данных(BLL).
UI не изменяет отображаемые данные на постоянной основе без изменения BLL.
Redux - Функциональный подход к обмену данными с BLL
MobX - Объектно Ориентированный подход к обмену данными с BLL

Конспект #14 - Домашка
1)Все лишние фукнции и правила засунуть в объект store(Сделать ООП)

Конспект #15 - ООП
_state - Нижнее подчеркивание это условная договорённость о неиспользовании данного метода.
Redux(Библиотека) — это инструмент для управления состоянием данных и пользовательским интерфейсом
в приложениях JavaScript с большим количеством сущностей.
Сейчас пишу точную копию store из Redux.

Конспект #16 - Про концепции Redux
Redux использует метод dispatch в который передаётся объект(action) и обязательным параметром тип(Type)

Конспект #16.1 - Повторение
Route - Отвечает за считывание URL браузера и отрисовки компоненты соответствующей считываемому url
NAVLINK - Меняет URL браузера тем самым заставляя Route работать.